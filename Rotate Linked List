/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */
int f(Node* h)
{
     int n=0;
     while(h)
     {
          n++;
          h=h->next;
     }
     return n;
}
Node *rotate(Node *head, int k) {
     // Write your code here.
     if(k==0) return head;
     int n=f(head);
     if(k%n==0) return head;
     k=k%(n);
     
     int s=1;
     Node* c=head;
     k=n-k;
     while(s<k)
     {
          s++;
          c=c->next;
     }
     Node* temp=c->next;
     c->next=NULL;
     Node* res=temp;
     while(temp->next)
     {
          temp=temp->next;
     }
     temp->next=head;
     return res;


}
