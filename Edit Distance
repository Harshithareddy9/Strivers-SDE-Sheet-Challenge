
#include<vector>

int solve(string &a,string &b,int i,int j,vector<vector<int>> &dp)

{

    if(i==a.length())

    {

        return b.length()-j;

 

    }

    if(j==b.length())

    {

        return a.length()-i;

    }

 

    if(dp[i][j] != -1)

    {

        return dp[i][j];

    }

   

    if(a[i]==b[j])

    {

        return dp[i][j]= solve(a,b,i+1,j+1,dp);

    }

    else {
      int x = solve(a, b, i + 1, j, dp);

      int y = solve(a, b, i, j + 1, dp);

      int z = solve(a, b, i + 1, j + 1, dp);

      return dp[i][j] = min(x, min(y, z)) + 1;
    }
}

int editDistance(string str1, string str2)

{

    int n = str1.length();

    int m = str2.length();

    vector<vector<int>>dp(n+1,vector<int>(m+1,-1));

    return solve(str1,str2,0,0,dp);

}

