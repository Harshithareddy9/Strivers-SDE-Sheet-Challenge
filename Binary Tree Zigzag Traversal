#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    // Write your code here!
    vector<int> ans;
    if(!root) return ans;
    queue<BinaryTreeNode<int>*> q;
    q.push(root);
    bool f=true;
    while(!q.empty())
    {
          int n=q.size();
          if(f)
          {

              for(int i=0;i<n;i++)
              {
                  auto t=q.front();
                  q.pop();
                  ans.push_back(t->data);
                  if(t->left) q.push(t->left);
                  if(t->right) q.push(t->right);
              }
              f=!f;
          }
          else
          {
              vector<int> temp;
                   for(int i=0;i<n;i++)
              {
                  auto t=q.front();
                  q.pop();
                  temp.push_back(t->data);
                  if(t->left) q.push(t->left);
                  if(t->right) q.push(t->right);
              }
              for(int i=temp.size()-1;i>=0;i--)
              {
                  ans.push_back(temp[i]);
              }
              f=!f;
          } 
    }
   return ans;
}
