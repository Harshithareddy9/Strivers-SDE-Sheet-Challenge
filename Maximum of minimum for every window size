#include <bits/stdc++.h> 
vector<int> maxMinWindow(vector<int> &a, int n) {
  stack<int> s;
  vector<int> prev(n + 1, -1),next(n + 1, n); 

  for (int i = 0; i < n; i++) {
    while (!s.empty() and a[s.top()] >= a[i])
      s.pop();
    if (!s.empty())
      prev[i] = s.top();
    s.push(i);
  }

  while (!s.empty())
    s.pop();

  for (int i = n - 1; i >= 0; i--) {
    while (!s.empty() and a[s.top()] >= a[i])
      s.pop();
    if (!s.empty())
      next[i] = s.top();
    s.push(i);
  }

  vector<int> cal(n , INT_MIN);
  vector<int> ans(n);
  for (int i = 0; i < n; i++) {
    int len =next[i] - prev[i] - 1;
    cal[len-1] = max(cal[len-1], a[i]);
  }

  for (int i = n - 2; i >= 0; i--)
    cal[i] = max(cal[i], cal[i + 1]);
  return cal;
}
