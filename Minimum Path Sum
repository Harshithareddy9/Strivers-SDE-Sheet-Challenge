#include <bits/stdc++.h> 
int f(int i,int j,int m,int n,vector<vector<int>> &grid,vector<vector<int>> &dp)
{
    if(i==n-1 && j==m-1) return grid[i][j];
    if(i>=n || j>=m ) return INT_MAX;
    if(dp[i][j]!=-1) return dp[i][j];
    int a=grid[i][j];
    a+=min(f(i+1,j,m,n,grid,dp),f(i,j+1,m,n,grid,dp));
    return dp[i][j]=a;

}
int minSumPath(vector<vector<int>> &grid) {
    // Write your code here.
    
    int m=grid[0].size();
    int n=grid.size();
    vector<vector<int>> dp(n,vector<int>(m,-1));
    return f(0,0,m,n,grid,dp);

}
