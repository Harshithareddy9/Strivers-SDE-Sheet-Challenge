/**
 * Definition of linked list:
 *
 * class Node {
 * public:
 *      int data;
 *      Node *next;
 *      Node() {
 *          this->data = 0;
 *          this->next = NULL;
 *      }
 *      Node(int data) {
 *          this->data = data;
 *          this->next = NULL;
 *      }
 *      Node (int data, Node *next) {
 *          this->data = data;
 *          this->next = next;
 *      }
 * };
 *
 *************************************************************************/

Node *addTwoNumbers(Node *num1, Node *num2)
{
    // Write your code here.
    Node* ans=new Node(0);
    Node* t=ans;
    int c=0;
    while(num1 && num2)
    {
        if(num1->data+c+num2->data>=10)
        {
            t->next=new Node((num1->data+c+num2->data)%10);
            c=(num1->data+c+num2->data)/10;
            t=t->next;
            num1=num1->next;
            num2=num2->next;
        }
        else{
            t->next=new Node((num1->data+c+num2->data));
            c=0;
            t=t->next;
            num1=num1->next;
            num2=num2->next;
        }
    }
    while(num1)
    {
        if(num1->data+c>=10)
        {
            t->next=new Node((num1->data+c)%10);
            c=(num1->data+c)/10;
            t=t->next;
            num1=num1->next;
           
        }
        else{
            t->next=new Node((num1->data+c));
            c=0;
            t=t->next;
            num1=num1->next;
           
        }
    }
    while(num2){
    if(c+num2->data>=10)
        {
            t->next=new Node((c+num2->data)%10);
            c=(c+num2->data)/10;
            t=t->next;
            
            num2=num2->next;
    } else {
      t->next = new Node(( c + num2->data));
      c = 0;
      t = t->next;
      
      num2 = num2->next;
    }
    }
    if(c)
    {
        t->next=new Node(c);
    }
    return ans->next;
}
