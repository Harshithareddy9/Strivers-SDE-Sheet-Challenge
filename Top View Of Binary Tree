#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure:

    template <typename T>
    class TreeNode {
       public:
        T val;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T val) {
            this->val = val;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

vector<int> getTopView(TreeNode<int> *root) {
    // Write your code here.
    vector<int> ans;
    if(!root) return ans;
    map<int,int> m;
    queue<pair<TreeNode<int>*,int>> q;
    q.push({root,0});
    while(!q.empty())
    {  int n=q.size();
        while(n--)
        {
            TreeNode<int> * t=q.front().first;
            int x=q.front().second;
            q.pop();
            if (m.find(x) == m.end()) {
              m[x] = t->val;
            }
            if(t->left) q.push({t->left,x-1});
            if(t->right) q.push({t->right,x+1});


        }
    }
    for(auto x:m)
    {
        ans.push_back(x.second);
    }
 return ans;   
}
