#include<queue>

int f(priority_queue<int,vector<int>>&maxh,
	priority_queue<int,vector<int>,greater<int>>&minh)
	{
		int n=maxh.size(),m=minh.size();
		if(n-m==2 || n-m==-2)
		{
			if(n>m)
			{
				minh.push(maxh.top());
				maxh.pop();
			}
			else{
                  maxh.push(minh.top());
				minh.pop();
			}
		}
		if((n+m)%2==0)
		{
			return (maxh.top()+minh.top())/2;
		}
		if(n>m) return maxh.top();
		return minh.top();
	}
vector<int> findMedian(vector<int> &arr, int n){
	
	// Write your code here 
	vector<int> ans;
	priority_queue<int,vector<int>> maxh;
	priority_queue<int,vector<int>,greater<int>> minh;
	for(int i=0;i<n;i++)
	{
		if(maxh.empty() && minh.empty())
		{
			maxh.push(arr[i]);
		}
		else{
			if(maxh.top()<arr[i])
			{
				minh.push(arr[i]);
			}
			else{
				maxh.push(arr[i]);
			}
		}
		ans.push_back(f(maxh,minh));
	}
	return ans;
}
