#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
TreeNode<int>* f(int is,int ie,vector<int> &inorder,int ps,int pe, vector<int> &preorder,unordered_map<int,int>&m)
{
    if(is>ie || ps>pe) return NULL;
    TreeNode<int>* root=new TreeNode<int>(preorder[ps]);
    int x=m[preorder[ps]];

    root->left=f(is,x-1,inorder,ps+1,x-is+ps,preorder,m);
    root->right=f(x+1,ie,inorder,ps+x-is+1,pe,preorder,m);
    return root;
}
TreeNode<int> *buildBinaryTree(vector<int> &inorder, vector<int> &preorder)
{
	//    Write your code here
    unordered_map<int,int> m;
    for(int i=0;i<inorder.size();i++)
    {
        m[inorder[i]]=i;
    }
    return f(0,inorder.size()-1,inorder,0,preorder.size()-1,preorder,m);

}
