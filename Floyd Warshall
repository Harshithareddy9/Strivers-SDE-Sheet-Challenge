int floydWarshall(int n, int m, int src, int dest, vector<vector<int>> &edges) {
  
  vector<vector<int>> mat(n, vector<int>(n, 1e9));

  for (int i = 0; i < n; i++)
    mat[i][i] = 0;

  for (auto it : edges) {
    int  i= it[0] - 1, j = it[1] - 1, w = it[2];
    mat[i][j] = w;
  }
 

  for (int k = 0; k < n; k++) {
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (mat[i][k] != 1e9 and mat[k][j] != 1e9)
          mat[i][j] = min(mat[i][j], mat[i][k] + mat[k][j]);
      }
    }
  }
  return mat[src - 1][dest - 1];
}
